export interface IPolygonQuery {
    [key: string]: string | number | boolean | undefined;
}
export interface IPolygonEdgeHeaders extends Record<string, string> {
    'X-Polygon-Edge-ID': string;
    'X-Polygon-Edge-IP-Address': string;
    'X-Polygon-Edge-User-Agent'?: string;
}
export declare type IHeaders = IPolygonEdgeHeaders | Record<string, string>;
export interface IRequestInit extends RequestInit {
    headers?: IHeaders;
}
export declare type IRequestOptions = IRequestInit;
export interface IPolygonQueryWithCredentials extends IPolygonQuery {
    apiKey: string | boolean;
}
export declare type IGet = (path: string, query: IPolygonQuery, options: IRequestOptions) => Promise<any>;
export declare type ICurriedGet = (apiKey: string, apiBase: string, globalOptions?: IRequestOptions) => IGet;
export declare type IStructuredError = InstanceType<typeof StructuredError>;
declare class StructuredError extends Error {
    status: string;
    request_id: string;
    constructor(message: string, status?: string, requestId?: string);
}
export declare const getWithGlobals: ICurriedGet;
export {};
