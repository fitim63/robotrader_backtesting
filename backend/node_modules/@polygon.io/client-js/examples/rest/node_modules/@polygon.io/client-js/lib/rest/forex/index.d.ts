import { IPolygonQuery, IRequestOptions } from "../transport/request.js";
import { IAggsQuery, IAggs } from "../stocks/aggregates.js";
import { IAggsGroupedDaily, IAggsGroupedDailyQuery } from "../stocks/aggregatesGroupedDaily.js";
import { IAggsPreviousCloseQuery, IAggsPreviousClose } from "../stocks/previousClose.js";
import { ITradesQuotesQuery } from "../stocks/trades.js";
import { IConversionQuery, IConversion } from "./conversion.js";
import { IForexQuotes } from "./quotes.js";
import { IForexLastQuote } from "./lastQuote.js";
import { IForexSnapshotAllTickersQuery, IForexSnapshotTickers, IForexSnapshot } from "./snapshots.js";
import { ISummaries, ISummariesQuery } from "../stocks/summaries.js";
import { ITechnicalIndicatorsQuery } from "../stocks/sma.js";
import { ISma } from "./sma.js";
import { IEma } from "./ema.js";
import { IMacd } from "./macd.js";
import { IRsi } from "./rsi.js";
export { IConversionQuery, IConversion } from "./conversion.js";
export { IForexQuotes } from "./quotes.js";
export { IForexLastQuote } from "./lastQuote.js";
export { IRealTimeCurrencyConversionQuery, IRealTimeCurrencyConversion, } from "./realTimeCurrencyConversion.js";
export { IForexSnapshotAllTickersQuery, IForexSnapshotTickers, IForexSnapshot, } from "./snapshots.js";
export { ISummariesQuery, ISummaries } from '../stocks/summaries.js';
export { ISma, ITechnicalIndicatorsQuery } from '../stocks/sma.js';
export { IEma } from '../stocks/ema.js';
export { IMacd } from '../stocks/macd.js';
export { IRsi } from '../stocks/rsi.js';
export interface IForexClient {
    aggregates: (ticker: string, multiplier: number, timespan: string, from: string, to: string, query?: IAggsQuery, options?: IRequestOptions) => Promise<IAggs>;
    aggregatesGroupedDaily: (date: string, query?: IAggsGroupedDailyQuery, options?: IRequestOptions) => Promise<IAggsGroupedDaily>;
    summaries: (query?: ISummariesQuery, options?: IRequestOptions) => Promise<ISummaries>;
    conversion: (from: string, to: string, query?: IConversionQuery, options?: IRequestOptions) => Promise<IConversion>;
    quotes: (fxTicker: string, query?: ITradesQuotesQuery, options?: IRequestOptions) => Promise<IForexQuotes>;
    lastQuote: (from: string, to: string, query?: IPolygonQuery, options?: IRequestOptions) => Promise<IForexLastQuote>;
    previousClose: (symbol: string, query?: IAggsPreviousCloseQuery, options?: IRequestOptions) => Promise<IAggsPreviousClose>;
    snapshotAllTickers: (query?: IForexSnapshotAllTickersQuery, options?: IRequestOptions) => Promise<IForexSnapshotTickers>;
    snapshotGainersLosers: (direction: "gainers" | "losers", query?: IPolygonQuery, options?: IRequestOptions) => Promise<IForexSnapshotTickers>;
    snapshotTicker: (symbol: string, query?: IPolygonQuery, options?: IRequestOptions) => Promise<IForexSnapshot>;
    sma: (symbol: string, query?: ITechnicalIndicatorsQuery, options?: IRequestOptions) => Promise<ISma>;
    ema: (symbol: string, query?: ITechnicalIndicatorsQuery, options?: IRequestOptions) => Promise<IEma>;
    macd: (symbol: string, query?: ITechnicalIndicatorsQuery, options?: IRequestOptions) => Promise<IMacd>;
    rsi: (symbol: string, query?: ITechnicalIndicatorsQuery, options?: IRequestOptions) => Promise<IRsi>;
}
export declare const forexClient: (apiKey: string, apiBase?: string, options?: IRequestOptions) => IForexClient;
export default forexClient;
