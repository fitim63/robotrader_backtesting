import { IPolygonQuery, IRequestOptions } from "../transport/request.js";
import { IAggsQuery, IAggs } from "../stocks/aggregates.js";
import { IAggsPreviousCloseQuery, IAggsPreviousClose } from "../stocks/previousClose.js";
import { ITradesQuotesQuery } from "../stocks/trades.js";
import { IOptionsDailyOpenCloseQuery, IOptionsDailyOpenClose } from "./dailyOpenClose.js";
import { IOptionTrades } from "./trades.js";
import { IOptionsLastTrade } from "./lastTrade.js";
import { IOptionQuotes } from "./quotes.js";
import { IOptionsSnapshotContract, IOptionsSnapshotChain, IOptionsChainQuery } from "./snapshots.js";
import { ISummaries, ISummariesQuery } from "../stocks/summaries.js";
import { ITechnicalIndicatorsQuery } from "../stocks/sma.js";
import { ISma } from "./sma.js";
import { IEma } from "./ema.js";
import { IMacd } from "./macd.js";
import { IRsi } from "./rsi.js";
export { IOptionsDailyOpenCloseQuery, IOptionsDailyOpenClose, } from "./dailyOpenClose.js";
export { IOptionTrades } from "./trades.js";
export { IOptionsLastTrade } from "./lastTrade.js";
export { IOptionQuotes } from "./quotes.js";
export { IOptionsSnapshotContract, IOptionsSnapshotChain, IOptionsChainQuery, snapshotOptionContract, snapshotOptionChain, } from "./snapshots.js";
export { ISummariesQuery, ISummaries } from '../stocks/summaries.js';
export { ISma, ITechnicalIndicatorsQuery } from '../stocks/sma.js';
export { IEma } from '../stocks/ema.js';
export { IMacd } from '../stocks/macd.js';
export { IRsi } from '../stocks/rsi.js';
export interface IOptionsClient {
    aggregates: (ticker: string, multiplier: number, timespan: string, from: string, to: string, query?: IAggsQuery, options?: IRequestOptions) => Promise<IAggs>;
    summaries: (query?: ISummariesQuery, options?: IRequestOptions) => Promise<ISummaries>;
    dailyOpenClose: (symbol: string, date: string, query?: IOptionsDailyOpenCloseQuery, options?: IRequestOptions) => Promise<IOptionsDailyOpenClose>;
    previousClose: (symbol: string, query?: IAggsPreviousCloseQuery, options?: IRequestOptions) => Promise<IAggsPreviousClose>;
    trades: (optionsTicker: string, query?: ITradesQuotesQuery, options?: IRequestOptions) => Promise<IOptionTrades>;
    lastTrade: (symbol: string, query?: IPolygonQuery, options?: IRequestOptions) => Promise<IOptionsLastTrade>;
    quotes: (optionsTicker: string, query?: ITradesQuotesQuery, options?: IRequestOptions) => Promise<IOptionQuotes>;
    snapshotOptionContract: (underlyingAsset: string, optionContract: string, query?: IPolygonQuery, options?: IRequestOptions) => Promise<IOptionsSnapshotContract>;
    snapshotOptionChain: (underlyingAsset: string, query?: IOptionsChainQuery, options?: IRequestOptions) => Promise<IOptionsSnapshotChain>;
    sma: (symbol: string, query?: ITechnicalIndicatorsQuery, options?: IRequestOptions) => Promise<ISma>;
    ema: (symbol: string, query?: ITechnicalIndicatorsQuery, options?: IRequestOptions) => Promise<IEma>;
    macd: (symbol: string, query?: ITechnicalIndicatorsQuery, options?: IRequestOptions) => Promise<IMacd>;
    rsi: (symbol: string, query?: ITechnicalIndicatorsQuery, options?: IRequestOptions) => Promise<IRsi>;
}
export declare const optionsClient: (apiKey: string, apiBase?: string, options?: IRequestOptions) => IOptionsClient;
export default optionsClient;
